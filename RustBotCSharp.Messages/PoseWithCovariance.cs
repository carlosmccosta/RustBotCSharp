// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PoseWithCovariance.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from PoseWithCovariance.proto</summary>
public static partial class PoseWithCovarianceReflection {

  #region Descriptor
  /// <summary>File descriptor for PoseWithCovariance.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static PoseWithCovarianceReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChhQb3NlV2l0aENvdmFyaWFuY2UucHJvdG8aClBvc2UucHJvdG8iKQoSUG9z",
          "ZVdpdGhDb3ZhcmlhbmNlEhMKBHBvc2UYASABKAsyBS5Qb3NlYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::PoseReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::PoseWithCovariance), global::PoseWithCovariance.Parser, new[]{ "Pose" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class PoseWithCovariance : pb::IMessage<PoseWithCovariance> {
  private static readonly pb::MessageParser<PoseWithCovariance> _parser = new pb::MessageParser<PoseWithCovariance>(() => new PoseWithCovariance());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PoseWithCovariance> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PoseWithCovarianceReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PoseWithCovariance() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PoseWithCovariance(PoseWithCovariance other) : this() {
    Pose = other.pose_ != null ? other.Pose.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PoseWithCovariance Clone() {
    return new PoseWithCovariance(this);
  }

  /// <summary>Field number for the "pose" field.</summary>
  public const int PoseFieldNumber = 1;
  private global::Pose pose_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Pose Pose {
    get { return pose_; }
    set {
      pose_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PoseWithCovariance);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PoseWithCovariance other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Pose, other.Pose)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (pose_ != null) hash ^= Pose.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (pose_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Pose);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (pose_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pose);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PoseWithCovariance other) {
    if (other == null) {
      return;
    }
    if (other.pose_ != null) {
      if (pose_ == null) {
        pose_ = new global::Pose();
      }
      Pose.MergeFrom(other.Pose);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (pose_ == null) {
            pose_ = new global::Pose();
          }
          input.ReadMessage(pose_);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code

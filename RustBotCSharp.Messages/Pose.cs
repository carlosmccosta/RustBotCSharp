// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Pose.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Pose.proto</summary>
public static partial class PoseReflection {

  #region Descriptor
  /// <summary>File descriptor for Pose.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static PoseReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgpQb3NlLnByb3RvGgtQb2ludC5wcm90bxoQUXVhdGVybmlvbi5wcm90byJC",
          "CgRQb3NlEhgKCHBvc2l0aW9uGAEgASgLMgYuUG9pbnQSIAoLb3JpZW50YXRp",
          "b24YAiABKAsyCy5RdWF0ZXJuaW9uYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::PointReflection.Descriptor, global::QuaternionReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Pose), global::Pose.Parser, new[]{ "Position", "Orientation" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Pose : pb::IMessage<Pose> {
  private static readonly pb::MessageParser<Pose> _parser = new pb::MessageParser<Pose>(() => new Pose());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Pose> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PoseReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Pose() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Pose(Pose other) : this() {
    Position = other.position_ != null ? other.Position.Clone() : null;
    Orientation = other.orientation_ != null ? other.Orientation.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Pose Clone() {
    return new Pose(this);
  }

  /// <summary>Field number for the "position" field.</summary>
  public const int PositionFieldNumber = 1;
  private global::Point position_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Point Position {
    get { return position_; }
    set {
      position_ = value;
    }
  }

  /// <summary>Field number for the "orientation" field.</summary>
  public const int OrientationFieldNumber = 2;
  private global::Quaternion orientation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Quaternion Orientation {
    get { return orientation_; }
    set {
      orientation_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Pose);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Pose other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Position, other.Position)) return false;
    if (!object.Equals(Orientation, other.Orientation)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (position_ != null) hash ^= Position.GetHashCode();
    if (orientation_ != null) hash ^= Orientation.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (position_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Position);
    }
    if (orientation_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Orientation);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (position_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
    }
    if (orientation_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Orientation);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Pose other) {
    if (other == null) {
      return;
    }
    if (other.position_ != null) {
      if (position_ == null) {
        position_ = new global::Point();
      }
      Position.MergeFrom(other.Position);
    }
    if (other.orientation_ != null) {
      if (orientation_ == null) {
        orientation_ = new global::Quaternion();
      }
      Orientation.MergeFrom(other.Orientation);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (position_ == null) {
            position_ = new global::Point();
          }
          input.ReadMessage(position_);
          break;
        }
        case 18: {
          if (orientation_ == null) {
            orientation_ = new global::Quaternion();
          }
          input.ReadMessage(orientation_);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
